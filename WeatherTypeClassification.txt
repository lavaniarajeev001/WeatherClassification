import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder,StandardScaler
import seaborn as sns
import matplotlib as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
from sklearn.linear_model import LogisticRegression
import pickle

def get_clean_data():
    data=pd.read_csv("weather_classification_data.csv")
    label_encoder=LabelEncoder()
    data["Cloud Cover"]=label_encoder.fit_transform(data["Cloud Cover"])
    data["Season"]=label_encoder.fit_transform(data["Season"])
    data["Location"]=label_encoder.fit_transform(data["Location"])
    data["Weather Type"]=label_encoder.fit_transform(data["Weather Type"])
    return data

def create_model(): 
    data=get_clean_data()
    X=data.drop(["Weather Type"],axis=1)
    y=data["Weather Type"]

    scaler=StandardScaler()
    X=scaler.fit_transform(X)

    X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=42)
    model=LogisticRegression(multi_class="multinomial")
    model.fit(X_train,y_train)

    

    y_pred = model.predict(X_test)
    print('Accuracy of our model: ', accuracy_score(y_test, y_pred))
    print("Classification report: \n", classification_report(y_test, y_pred))
    print("Confusion Matrix: \n", confusion_matrix(y_test, y_pred))
    return model,scaler

def main():
    data=get_clean_data()
    model,scaler=create_model()

    with open("model.pkl","wb") as f:
        pickle.dump(model,f)
    with open("scaler.pkl","wb") as f:
        pickle.dump(scaler,f)

if __name__=="__main__":
    main()